plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.2'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.wispforest.io/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://maven.cafeteria.dev" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://api.modrinth.com/maven/" }

    flatDir {
        dir('libs')
    }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Alloy Forgery
    modImplementation("maven.modrinth:alloy-forgery:${project.alloyforgery_version}")

    // config
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}")

    // OwO
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"

    // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    // modmenu
    modApi("com.terraformersmc:modmenu:${project.modmenu_version}")

    // Origins compat - Definitely not really late
    // modImplementation "com.github.apace100:origins-fabric:${project.origins_version}"

    // Magna, used for Super Bang tools
    include 'com.github.Technici4n:magna:1.8.1-1.19'
    modImplementation 'com.github.Technici4n:magna:1.8.1-1.19'

    // MM Decorations
    //modRuntimeOnly("nourl:MythicMetalsDecorations:${project.mmdecorations_version}")

    // Cardinal Components
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    // Adds a dependency on a specific module
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
    // Includes Cardinal Components API as a Jar-in-Jar dependency (optional)
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"

}

sourceSets {
    main{
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

loom {
    runs {
        datagen {
            server()

            name "Minecraft Data"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"

            runDir "build/datagen"
        }
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    withSourcesJar()
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

jar {
    from "LICENSE"
}
